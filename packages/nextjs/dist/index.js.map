{"version":3,"sources":["../src/shared/errors.ts"],"sourcesContent":["import type { AuthError } from './types'\n\nexport class NoranekoAuthError extends Error implements AuthError {\n  readonly type = 'AuthError' as const\n  \n  constructor(\n    public code: string,\n    message: string,\n    public cause?: Error\n  ) {\n    super(message)\n    this.name = 'NoranekoAuthError'\n  }\n}\n\nexport class TokenExpiredError extends NoranekoAuthError {\n  constructor(message = 'Token has expired') {\n    super('TOKEN_EXPIRED', message)\n  }\n}\n\nexport class InvalidTokenError extends NoranekoAuthError {\n  constructor(message = 'Invalid token') {\n    super('INVALID_TOKEN', message)\n  }\n}\n\nexport class AuthenticationRequiredError extends NoranekoAuthError {\n  constructor(message = 'Authentication required') {\n    super('AUTHENTICATION_REQUIRED', message)\n  }\n}\n\nexport class OAuthError extends NoranekoAuthError {\n  constructor(\n    public oauthError: string,\n    public oauthErrorDescription?: string\n  ) {\n    super('OAUTH_ERROR', `OAuth error: ${oauthError}${oauthErrorDescription ? ` - ${oauthErrorDescription}` : ''}`)\n  }\n}"],"mappings":";AAEO,IAAM,oBAAN,cAAgC,MAA2B;AAAA,EAGhE,YACS,MACP,SACO,OACP;AACA,UAAM,OAAO;AAJN;AAEA;AAGP,SAAK,OAAO;AAAA,EACd;AAAA,EATS,OAAO;AAUlB;AAEO,IAAM,oBAAN,cAAgC,kBAAkB;AAAA,EACvD,YAAY,UAAU,qBAAqB;AACzC,UAAM,iBAAiB,OAAO;AAAA,EAChC;AACF;AAEO,IAAM,oBAAN,cAAgC,kBAAkB;AAAA,EACvD,YAAY,UAAU,iBAAiB;AACrC,UAAM,iBAAiB,OAAO;AAAA,EAChC;AACF;AAEO,IAAM,8BAAN,cAA0C,kBAAkB;AAAA,EACjE,YAAY,UAAU,2BAA2B;AAC/C,UAAM,2BAA2B,OAAO;AAAA,EAC1C;AACF;AAEO,IAAM,aAAN,cAAyB,kBAAkB;AAAA,EAChD,YACS,YACA,uBACP;AACA,UAAM,eAAe,gBAAgB,UAAU,GAAG,wBAAwB,MAAM,qBAAqB,KAAK,EAAE,EAAE;AAHvG;AACA;AAAA,EAGT;AACF;","names":[]}